<resources>
    <string name="inicio">Inicio</string>
    <string name="app_name">Round Robin</string>
    <string name="teoria">Teória</string>
    <string name="funcion">Función</string>
    <string name="creditos">Créditos</string>
    <string name="round">Planificacion Algoritmo Round Robin</string>
    <string name="titulo1">Definición</string>
    <string name="definicion">Round robin es un procedimiento para elegir todos los recursos en un conjunto de forma equitativa y en un orden racional, comúnmente empezando por el primer factor de la lista hasta llegar al último y comenzando otra vez a partir del primer factor. Una forma simple de comprender el round robin es imaginar una sucesión para "tomar turnos". En operaciones computacionales, un procedimiento para realizar diferentes procesos de forma concurrente, para la implementación equitativa de los recursos del equipo, es limitando cada proceso a un diminuto lapso de tiempo (quantum), y después suspendiendo éste proceso para ofrecer posibilidad a otro proceso y de esta forma sucesivamente. </string>
    <string name="titulo2">Aplicación S.O</string>
    <string name="apli_so">Round Robin es uno de los algoritmos de planificación de procesos más complejos y dificiles, dentro de un sistema operativo que asigna a cada proceso una porción de tiempo equitativa y ordenada, tratando a todos los procesos con la misma prioridad. En Sistemas operativos, la planificación Round Robin da un tiempo máximo de uso de CPU a cada proceso, pasado el cual es desalojado y retornado al estado de listo, la lista de procesos se planifica por FCFS, primero llegado, primero atendido.</string>
    <string name="titulo3">Formula</string>
    <string name="Formula">Para averiguar los pasos de ciclos de procesos totales se toman todos los números de procesos y se calculan con los procesos necesarios para la realización de estos. \n\nSuponga que hay tres procesos y se desea averiguar cuánto tarda. \n\nproceso A: 3 veces. \nproceso B: 4 veces. \nproceso C: 5 veces. \n\ntp=tProceso + \n[(tProcesoultimo-tProceso)\n - (tProcesoultimo-tProcesoproximo)]\n + tProceso</string>
    <string name="julian">Julian A. Sarmiento Leon -20182578035</string>
    <string name="miller">Miller A. Barahona Hernandez - 20182578039</string>
    <string name="marlon">Marlon S. Castaño Merida - 20182578124</string>
</resources>